diff --git a/.idea/deployment.xml b/.idea/deployment.xml
new file mode 100644
index 0000000..3676f1e
--- /dev/null
+++ b/.idea/deployment.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PublishConfigData" autoUpload="Always" serverName="sledge" remoteFilesAllowedToDisappearOnAutoupload="false">
+    <serverData>
+      <paths name="sledge">
+        <serverdata>
+          <mappings>
+            <mapping deploy="/lab2cs153/xv6" local="$PROJECT_DIR$" web="/" />
+          </mappings>
+        </serverdata>
+      </paths>
+    </serverData>
+    <option name="myAutoUpload" value="ALWAYS" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
index 0000000..830d3c8
--- /dev/null
+++ b/.idea/misc.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="MakefileWorkspace">
+    <contentRoot DIR="$PROJECT_DIR$" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000..9c19272
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/xv6lab2.iml" filepath="$PROJECT_DIR$/.idea/xv6lab2.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/sshConfigs.xml b/.idea/sshConfigs.xml
new file mode 100644
index 0000000..c3dc37f
--- /dev/null
+++ b/.idea/sshConfigs.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="SshConfigs">
+    <configs>
+      <sshConfig authType="PASSWORD" host="sledge.cs.ucr.edu" id="f93acaea-9f3e-4168-8178-f5f2354fd993" port="22" nameFormat="DESCRIPTIVE" username="rbehe002" useOpenSSHConfig="true" />
+    </configs>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..94a25f7
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/webServers.xml b/.idea/webServers.xml
new file mode 100644
index 0000000..461a4d1
--- /dev/null
+++ b/.idea/webServers.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="WebServers">
+    <option name="servers">
+      <webServer id="cbcd2404-6f9a-4d28-9001-40645070d370" name="sledge" url="http://sledge.cs.ucr.edu">
+        <fileTransfer rootFolder="/home/csmajs/rbehe002" accessType="SFTP" host="sledge.cs.ucr.edu" port="22" sshConfigId="f93acaea-9f3e-4168-8178-f5f2354fd993" sshConfig="rbehe002@sledge.cs.ucr.edu:22 password">
+          <advancedOptions>
+            <advancedOptions dataProtectionLevel="Private" keepAliveTimeout="0" passiveMode="true" shareSSLContext="true" />
+          </advancedOptions>
+        </fileTransfer>
+      </webServer>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
index 0000000..7ea78d4
--- /dev/null
+++ b/.idea/workspace.xml
@@ -0,0 +1,290 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
+    <generated />
+  </component>
+  <component name="CMakeSettings">
+    <configurations>
+      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
+    </configurations>
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="29dc64be-3aa0-49ba-a7dc-ae2be56165dd" name="Changes" comment="Added step 3 and 4 comments">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/proc.c" beforeDir="false" afterPath="$PROJECT_DIR$/proc.c" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="ClangdSettings">
+    <option name="formatViaClangd" value="false" />
+  </component>
+  <component name="ExternalProjectsData">
+    <projectState path="$PROJECT_DIR$">
+      <ProjectState />
+    </projectState>
+  </component>
+  <component name="Git.Settings">
+    <favorite-branches>
+      <branch-storage>
+        <map>
+          <entry type="LOCAL">
+            <value>
+              <list>
+                <branch-info repo="$PROJECT_DIR$" source="lab2" />
+                <branch-info repo="$PROJECT_DIR$" source="lab2edit" />
+              </list>
+            </value>
+          </entry>
+        </map>
+      </branch-storage>
+    </favorite-branches>
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="lab2" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MakefileLocalSettings">
+    <option name="availableProjects">
+      <map>
+        <entry>
+          <key>
+            <ExternalProjectPojo>
+              <option name="name" value="xv6lab2" />
+              <option name="path" value="$PROJECT_DIR$" />
+            </ExternalProjectPojo>
+          </key>
+          <value>
+            <list>
+              <ExternalProjectPojo>
+                <option name="name" value="xv6lab2" />
+                <option name="path" value="$PROJECT_DIR$" />
+              </ExternalProjectPojo>
+            </list>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="projectSyncType">
+      <map>
+        <entry key="$PROJECT_DIR$" value="RE_IMPORT" />
+      </map>
+    </option>
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectApplicationVersion">
+    <option name="ide" value="CLion" />
+    <option name="majorVersion" value="2021" />
+    <option name="minorVersion" value="3.3" />
+  </component>
+  <component name="ProjectId" id="28Lb0zpdgivrIMBT9rGd6j0X2O6" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+    <option name="showMembers" value="true" />
+  </component>
+  <component name="PropertiesComponent">
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="WebServerToolWindowPanel.toolwindow.highlight.mappings" value="true" />
+    <property name="WebServerToolWindowPanel.toolwindow.highlight.symlinks" value="true" />
+    <property name="WebServerToolWindowPanel.toolwindow.show.date" value="false" />
+    <property name="WebServerToolWindowPanel.toolwindow.show.permissions" value="false" />
+    <property name="WebServerToolWindowPanel.toolwindow.show.size" value="false" />
+    <property name="cf.first.check.clang-format" value="false" />
+    <property name="cidr.known.project.marker" value="true" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+  </component>
+  <component name="RunManager">
+    <configuration name="gdb-remote" type="CLion_Remote" version="1" remoteCommand="localhost:28210" symbolFile="$PROJECT_DIR$/kernel" sysroot="$PROJECT_DIR$/">
+      <debugger kind="GDB" isBundled="true" />
+      <pathMapping remote=":/home/csmajs/rbehe002/lab2cs153/xv6" local="$PROJECT_DIR$/" />
+      <method v="2" />
+    </configuration>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="29dc64be-3aa0-49ba-a7dc-ae2be56165dd" name="Changes" comment="" />
+      <created>1650998595205</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1650998595205</updated>
+      <workItem from="1650998596919" duration="2032000" />
+      <workItem from="1651128364580" duration="8117000" />
+      <workItem from="1651593515828" duration="548000" />
+      <workItem from="1651631034995" duration="32669000" />
+      <workItem from="1652072300723" duration="6780000" />
+      <workItem from="1652673679219" duration="5072000" />
+    </task>
+    <task id="LOCAL-00001" summary="Start from scratch">
+      <created>1650999206214</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1650999206214</updated>
+    </task>
+    <task id="LOCAL-00002" summary="Step 1 Lab 2 done">
+      <created>1651449980250</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1651449980251</updated>
+    </task>
+    <task id="LOCAL-00003" summary="Step 1 Lab 2 done">
+      <created>1651450015036</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1651450015036</updated>
+    </task>
+    <task id="LOCAL-00004" summary="Finished step 1: Initializing prior_val through allocproc() and fork()">
+      <created>1651705356892</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1651705356892</updated>
+    </task>
+    <task id="LOCAL-00005" summary="Finished step 2: void set_prior(int prior_lvl)">
+      <created>1651714934366</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1651714934366</updated>
+    </task>
+    <task id="LOCAL-00006" summary="Finished step 3: implement round robin and priority scheduling">
+      <created>1651720444854</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1651720444854</updated>
+    </task>
+    <task id="LOCAL-00007" summary="Finished step 4: modify scheduler() to update procs' priority value">
+      <created>1651725716594</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1651725716594</updated>
+    </task>
+    <task id="LOCAL-00008" summary="Finished step 5: turnaround and waiting time">
+      <created>1651734659273</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1651734659273</updated>
+    </task>
+    <task id="LOCAL-00009" summary="Added lab 2 test file">
+      <created>1651734997860</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1651734997860</updated>
+    </task>
+    <task id="LOCAL-00010" summary="Fixed errors">
+      <created>1651739167622</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1651739167622</updated>
+    </task>
+    <task id="LOCAL-00011" summary="Fixed output to display properly">
+      <created>1651886715260</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1651886715260</updated>
+    </task>
+    <task id="LOCAL-00012" summary="Added step comments">
+      <created>1652068806658</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1652068806658</updated>
+    </task>
+    <task id="LOCAL-00013" summary="Added step 2 comments">
+      <created>1652079967078</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1652079967078</updated>
+    </task>
+    <task id="LOCAL-00014" summary="Added step 3 and 4 comments">
+      <created>1652083540147</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1652083540147</updated>
+    </task>
+    <option name="localTasksCounter" value="15" />
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="origin/master" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="RECENT_FILTERS">
+      <map>
+        <entry key="Branch">
+          <value>
+            <list>
+              <RecentGroup>
+                <option name="FILTER_VALUES">
+                  <option value="lab2edits" />
+                </option>
+              </RecentGroup>
+            </list>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Start from scratch" />
+    <MESSAGE value="Step 1 Lab 2 done" />
+    <MESSAGE value="Finished step 1: Initializing prior_val through allocproc() and fork()" />
+    <MESSAGE value="Finished step 2: void set_prior(int prior_lvl)" />
+    <MESSAGE value="Finished step 3: implement round robin and priority scheduling" />
+    <MESSAGE value="Finished step 4: modify scheduler() to update procs' priority value" />
+    <MESSAGE value="Finished step 5: turnaround and waiting time" />
+    <MESSAGE value="Added lab 2 test file" />
+    <MESSAGE value="Fixed errors" />
+    <MESSAGE value="Fixed output to display properly" />
+    <MESSAGE value="Added step comments" />
+    <MESSAGE value="Added step 2 comments" />
+    <MESSAGE value="Added step 3 and 4 comments" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added step 3 and 4 comments" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/xv6lab2.iml b/.idea/xv6lab2.iml
new file mode 100644
index 0000000..b5d25f0
--- /dev/null
+++ b/.idea/xv6lab2.iml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module classpath="External" external.linked.project.id="xv6lab2" external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$" external.system.id="Makefile" type="CPP_MODULE" version="4" />
\ No newline at end of file
diff --git a/Makefile b/Makefile
index 09d790c..a0818f3 100644
--- a/Makefile
+++ b/Makefile
@@ -181,6 +181,7 @@ UPROGS=\
 	_usertests\
 	_wc\
 	_zombie\
+	_lab2test\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
@@ -217,7 +218,7 @@ QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \
 	then echo "-gdb tcp::$(GDBPORT)"; \
 	else echo "-s -p $(GDBPORT)"; fi)
 ifndef CPUS
-CPUS := 2
+CPUS := 1
 endif
 QEMUOPTS = -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp $(CPUS) -m 512 $(QEMUEXTRA)
 
@@ -250,6 +251,7 @@ qemu-nox-gdb: fs.img xv6.img .gdbinit
 EXTRA=\
 	mkfs.c ulib.c user.h cat.c echo.c forktest.c grep.c kill.c\
 	ln.c ls.c mkdir.c rm.c stressfs.c usertests.c wc.c zombie.c\
+	lab2test.c\
 	printf.c umalloc.c\
 	README dot-bochsrc *.pl toc.* runoff runoff1 runoff.list\
 	.gdbinit.tmpl gdbutil\
diff --git a/defs.h b/defs.h
index 82fb982..ff3aedd 100644
--- a/defs.h
+++ b/defs.h
@@ -120,6 +120,7 @@ void            userinit(void);
 int             wait(void);
 void            wakeup(void*);
 void            yield(void);
+void            setPrior(int); //Step 2
 
 // swtch.S
 void            swtch(struct context**, struct context*);
diff --git a/exec.c b/exec.c
index b40134f..48186bc 100644
--- a/exec.c
+++ b/exec.c
@@ -99,6 +99,8 @@ exec(char *path, char **argv)
   curproc->sz = sz;
   curproc->tf->eip = elf.entry;  // main
   curproc->tf->esp = sp;
+  curproc->T_start = ticks; //Acquire time ticket from proc() start time
+  curproc->T_burst = 0; //Burst time is set to 0
   switchuvm(curproc);
   freevm(oldpgdir);
   return 0;
diff --git a/lab2test.c b/lab2test.c
new file mode 100644
index 0000000..4d750ad
--- /dev/null
+++ b/lab2test.c
@@ -0,0 +1,32 @@
+#include "types.h"
+#include "user.h"
+
+void work() {
+    int i,k;
+    for(i = 0; i < 43000; i++) {
+        for(k = 0; k < 43000; k++) {
+            asm("nop");
+        }
+    }
+}
+
+int main() {
+    setPrior(0);
+    int i = 0;
+    int pid = 0;
+    for(i = 0; i < 3; i++) {
+        pid = fork();
+        if(!pid) {
+            setPrior(i * 10);
+            work();
+            printf(0, "child %d done\n", getpid());
+            exit();
+        }
+    }
+    if(pid) {
+        for(i = 0; i < 3; i++)
+            wait();
+    }
+    printf(0, "parent %d done\n", getpid());
+    exit();
+}
\ No newline at end of file
diff --git a/proc.c b/proc.c
index 806b1b1..596e7d6 100644
--- a/proc.c
+++ b/proc.c
@@ -88,6 +88,7 @@ allocproc(void)
 found:
   p->state = EMBRYO;
   p->pid = nextpid++;
+  p->prior_val = 0; //initializing priority value in allocproc() to 0. Step 1
 
   release(&ptable.lock);
 
@@ -208,6 +209,9 @@ fork(void)
       np->ofile[i] = filedup(curproc->ofile[i]);
   np->cwd = idup(curproc->cwd);
 
+    np->prior_val = curproc->prior_val; //Initialization of prior_value in fork()
+                                        // child inherits the parent's priority value. Step 1
+
   safestrcpy(np->name, curproc->name, sizeof(curproc->name));
 
   pid = np->pid;
@@ -231,9 +235,11 @@ exit(void)
   struct proc *p;
   int fd;
 
+
   if(curproc == initproc)
     panic("init exiting");
 
+
   // Close all open files.
   for(fd = 0; fd < NOFILE; fd++){
     if(curproc->ofile[fd]){
@@ -261,6 +267,13 @@ exit(void)
     }
   }
 
+    curproc->T_finish = ticks;
+    int timeTurnAround = curproc->T_finish - curproc->T_start;
+    int timeWaiting = timeTurnAround-curproc->T_burst;
+
+    cprintf("Turnaround time = %d\n", timeTurnAround);
+    cprintf("Waiting time = %d\n", timeWaiting);
+
   // Jump into the scheduler, never to return.
   curproc->state = ZOMBIE;
   sched();
@@ -319,40 +332,70 @@ wait(void)
 //  - swtch to start running that process
 //  - eventually that process transfers control
 //      via swtch back to the scheduler.
+
+
 void
 scheduler(void)
 {
-  struct proc *p;
-  struct cpu *c = mycpu();
-  c->proc = 0;
-  
-  for(;;){
-    // Enable interrupts on this processor.
-    sti();
-
-    // Loop over process table looking for process to run.
-    acquire(&ptable.lock);
-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){
-      if(p->state != RUNNABLE)
-        continue;
-
-      // Switch to chosen process.  It is the process's job
-      // to release ptable.lock and then reacquire it
-      // before jumping back to us.
-      c->proc = p;
-      switchuvm(p);
-      p->state = RUNNING;
-
-      swtch(&(c->scheduler), p->context);
-      switchkvm();
+    struct proc *p;
+    struct cpu *c = mycpu();
+    c->proc = 0;
+
+    struct proc *p2; //Round robin: next runnable process p. Step 3
+    struct proc *min_prior; //Process with minimum priority from all processes. Step 3
+
+    for(;;){
+        // Enable interrupts on this processor.
+        sti();
+
+        // Loop over process table looking for process to run.
+        acquire(&ptable.lock);
+        for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){
+            if(p->state != RUNNABLE)
+                continue;
+
+            min_prior = p; //Round robin: acquires resource and starts running. Step 3
+
+            for (p2 = ptable.proc; p2 < &ptable.proc[NPROC]; p2++) { //Step 3
+                if(p2->state != RUNNABLE)
+                    continue;
+                min_prior = p2;
+                min_prior->T_burst = min_prior->T_burst + 1; //Step 5
+            }
+
+            //Step 4 If a process waits increase its priority
+            // (decrease its value). When it runs, decrease it (increase its value)
+            for (p2 = ptable.proc; p2 < &ptable.proc[NPROC]; p2++) {
+                if(p2->state != RUNNABLE || p2 == min_prior)
+                    continue;
+
+                if (p2->state == RUNNABLE && p2->prior_val > 0) {
+                    p2->prior_val--;
+                }
+            }
+
+            // Switch to chosen process.  It is the process's job
+            // to release ptable.lock and then reacquire it
+            // before jumping back to us.
+
+            c->proc = min_prior;
+            switchuvm(min_prior);
+            min_prior->state = RUNNING;
+
+            swtch(&(c->scheduler), min_prior->context);
+            switchkvm();
+
+            if (min_prior->prior_val < 31) {
+                    min_prior->prior_val++;
+            }
+
+            // Process is done running for now.
+            // It should have changed its p->state before coming back.
+            c->proc = 0;
+        }
+        release(&ptable.lock);
 
-      // Process is done running for now.
-      // It should have changed its p->state before coming back.
-      c->proc = 0;
     }
-    release(&ptable.lock);
-
-  }
 }
 
 // Enter scheduler.  Must hold only ptable.lock
@@ -391,6 +434,16 @@ yield(void)
   release(&ptable.lock);
 }
 
+void
+setPrior(int prior_lvl) {
+    //change the priority value of the current proc. Step 2
+    struct  proc *currentProc = myproc();
+    currentProc->prior_val = prior_lvl;
+
+    // transfer control to scheduler immediately because the priority rank has been changed. Step 2
+    yield();
+}
+
 // A fork child's very first scheduling by scheduler()
 // will swtch here.  "Return" to user space.
 void
diff --git a/proc.h b/proc.h
index 1647114..12bbc92 100644
--- a/proc.h
+++ b/proc.h
@@ -49,6 +49,10 @@ struct proc {
   struct file *ofile[NOFILE];  // Open files
   struct inode *cwd;           // Current directory
   char name[16];               // Process name (debugging)
+  int prior_val;               // Holds priority value. Step 1
+  int T_start;                 // Proc start time
+  int T_finish;                 // Proc finish time
+  int T_burst;                  // Burst time, how many times its been scheduled
 };
 
 // Process memory is laid out contiguously, low addresses first:
diff --git a/syscall.c b/syscall.c
index ee85261..3c298f3 100644
--- a/syscall.c
+++ b/syscall.c
@@ -103,6 +103,7 @@ extern int sys_unlink(void);
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_setPrior(void); //Step 2
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -126,6 +127,7 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_setPrior] sys_setPrior //Step 2
 };
 
 void
diff --git a/syscall.h b/syscall.h
index bc5f356..caa40a4 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,3 +20,5 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_setPrior 22 //new system call to update prior_val. Step 2
+
diff --git a/sysproc.c b/sysproc.c
index 0686d29..9c4c426 100644
--- a/sysproc.c
+++ b/sysproc.c
@@ -89,3 +89,22 @@ sys_uptime(void)
   release(&tickslock);
   return xticks;
 }
+
+void
+sys_setPrior(void) {
+    int prior_val = 0;
+    argint(0, &prior_val);
+
+    //Step 1: Add new field to proc structure
+    if (prior_val > 31) {
+        setPrior(31);
+    }
+    else if (prior_val < 0) {
+        setPrior(0);
+    }
+    else {
+        setPrior(prior_val);
+    }
+}
+
+
diff --git a/user.h b/user.h
index 4f99c52..e92fe40 100644
--- a/user.h
+++ b/user.h
@@ -23,6 +23,7 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+void setPrior(int); //Step 2
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/usys.S b/usys.S
index 8bfd8a1..035fe4b 100644
--- a/usys.S
+++ b/usys.S
@@ -29,3 +29,4 @@ SYSCALL(getpid)
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(setPrior) //Step 2
